$prefix: transit
title: Data Transfer
description: Importing and Exporting Store Information and Orders
_desc:
  $prefix: description
  csv: Commas Separate Values, lightweight to export and import data, compatible with most software.
  excel: Excel allow offline export and import, easy to integrate with Google Sheets and Microsoft Excel.
  googleSheet: Google Sheets is a powerful mini-database. After exporting, it can be customized for various analyses!
  plainText: Quick check, quick share.
method:
  title: Please Select Transfer Method
  name:
  - googleSheet: Google Sheets
    plainText: Plain Text
    excel: Excel
    csv: CSV
catalog:
  title:
  - Use {name} to Do What?
  name:
  - exportOrder: Export Order Records
    exportModel: Export Store Information
    importModel: Import Store Information
  helper:
  - exportOrder: Export order info for detailed statistical analysis.
    exportModel: Export store info to backup menu, inventory, etc., to third-party locations.
    importModel: Synchronize info to this device.
model:
  name:
  - menu: Menu
    stock: Inventory
    quantities: Quantities
    replenisher: Replenisher
    orderAttr: Customer Settings
order:
  name:
  - basic: Order
    attr: Customer Details
    product: Product Details
    ingredient: Ingredient Details
  setting:
    title: Order Export Settings
    meta:
      overwrite:
      - 'true': Will overwrite
        'false': Won't overwrite
      - value:
      titlePrefix:
      - 'true': Has date prefix
        'false': No date prefix
      - value:
    overwrite:
      label: Overwrite Sheet
      hint: Overwriting the sheet will start exporting from the first row.
    titlePrefix:
      label: Add Date Prefix
      hint: Add a date prefix to the sheet name, for example, "0101 - 0131 Order Data".
    recommendCombination: When not overwriting and using append instead, it's recommended not to add a date prefix to the form name.
  meta:
    range:
    - "Orders for {range}"
    - range: {example: '01/01 - 01/31'}
    rangeDays:
    - "Data for {days} Days"
    - days: {type: int}
  capacity:
    title:
    - 'Estimated Capacity: {size}'
    content: High capacity may cause execution errors. It's recommended to perform in batches and not export too many records at once.
    ok: Capacity Okay
    warn: Capacity Warning
    danger: Capacity Danger
  item:
    meta:
      productCount:
      - 'Product Count: {count}'
      - count: {type: int}
      price:
      - 'Total Price: {price}'
      - price:
    dialog:
      title: Order Details
export:
  tab: Export
  fileDialogTitle: Select Export Location
  basic:
    btn:
      csv: Export CSV files
      excel: Export Excel file
      googleSheet: Upload to Google Sheets
      plainText: Copy
    fileName: POS System Data
    success:
      csv: Exported successfully
      excel: Exported successfully
      googleSheet: Uploaded successfully
      plainText: Copied successfully
      action:
        googleSheet: Open
  order:
    title:
      csv: Export CSV files
      excel: Export Excel file
      googleSheet: Upload to Google Sheets
      plainText: Copy
    subtitle:
      csv: Will have multiple files with different types of data.
      excel: Single file with many sheets each having different types of data.
      googleSheet: |
        Upload needs network connection and request might be throttled by Google.
        If the upload fails, please try again later or use other methods to export.
      plainText: Simple text format, should be used for small data.
    fileName: POS System Orders
    progress:
      googleSheet:
        overwrite: Overwriting existing data
        append: Appending data to the exist sheet
    warning:
      memory:
        googleSheet: |
          The capacity here represents the amount consumed by network transmission, the actual cloud memory occupied may be only one percent of this value.
          For detailed capacity limit explanations, please refer to [this document](https://developers.google.com/sheets/api/limits#quota).
    success:
      csv: Exported successfully
      excel: Exported successfully
      googleSheet: Uploaded successfully
      plainText: Copied successfully
      action:
        googleSheet: Open
import:
  tab: Import
  btn:
    csv: Select .csv file
    excel: Select .xlsx file
    googleSheet: Select spreadsheet
    plainText:
      action: Click to paste text
      hint: Paste copied text here
      helper: |
        After pasting the text, it will analyze and determine the type of information to import.
        Copying too much text may cause system crash.
  modelSelection:
    label: Data Type
    all: All
    hint: Select the type of data first to import the corresponding data.
    plainTextHint: Enter text to import
  progress:
    googleSheet:
      start: Importing data from spreadsheet
      prepare: Fetching spreadsheet metadata
  error:
    basic:
      columnCount:
      - Insufficient data, {columns} columns required
      - columns: {type: int}
      duplicate: This line will be ignored as the same item appeared earlier
    csv:
      pickFile: Failed to pick file
    excel:
      pickFile: Failed to pick file
    googleSheet:
      fetchData:
        title: Unable to fetch data from spreadsheet
        helper: |-
          Don't worry, it's usually easy to solve!
          Possible reasons include:
          • Unstable network conditions;
          • POS system not authorized to read sheets;
          • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
          • The spreadsheet has been deleted.
      missing:
        title:
        - No data found for sheet {name}
        helper: |-
          Don't worry, it's usually easy to solve!
          Possible reasons include:
          • The spreadsheet doesn't have the sheets we want;
          • Unstable network conditions;
          • POS system not authorized to read sheets;
          • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
          • The spreadsheet has been deleted.
    preview:
      notFound:
      - Can't find '{name}' in the data
    plainText:
      notFound: This text cannot match any corresponding service. Please refer to the exported text content.
  success: Imported successfully
  preview:
    confirm:
      title: Import the data?
      content: 'Note: After importing, the data not shown will be removed. Please confirm before executing!'
      btn: Import Data
      verify: Verify
      hint:
      - |
        Still have {count} types of data not verified.
        If the data is incorrect, please cancel the operation and re-import after correction.
      - count: {type: int}
    ingredient:
      meta:
        amount:
        - 'Amount: {amount}'
        - amount: {type: num, format: decimalPattern}
        maxAmount:
        - =0: Not Set
          other: 'Max Value: {value}'
        - exist: {type: int, mode: plural}
          value: {type: num, format: decimalPattern}
      confirm: 'Note: After importing, ingredients not shown won''t be removed to avoid affecting the "Menu" status.'
    quantity:
      confirm: 'Note: After importing, quantities not shown won''t be removed to avoid affecting the "Menu" status.'
  columnStatus:
  - normal: (Normal)
    staged: (New)
    stagedIng: (New Ingredient)
    stagedQua: (New Quantity)
    updated: (Updated)
  - Additional status of the data displayed
format:
  field:
    product:
      ingredient:
        title: Ingredient Information
        note: |-
          Information of all product ingredients, format as follows:
          - Ingredient 1, Default usage amount
            + Quantity a, Additional usage amount, Additional price, Additional cost
            + Quantity b, Additional usage amount, Additional price, Additional cost
          - Ingredient 2, Default usage amount
    replenishment:
      title: Replenishment Amount
      note: |-
        The amount of specific ingredients during each replenishment, format as follows:
        - Ingredient 1, Replenishment amount
        - Ingredient 2, Replenishment amount
    attributeOption:
      title: Customer Setting Options
      note: |-
        "Options" will have different meanings depending on the type of customer settings, format as follows:
        - Option 1, Is default, Option value
        - Option 2, Is default, Option value
    order:
      no: No.
      time: Time
      price: Price
      productPrice: Product Price
      paid: Paid
      cost: Cost
      profit: Profit
      itemCount:
      - Item Count
      - how many items in the order
      typeCount:
      - Type Count
      - how many types of products in the order
    _order:
      $prefix: order
      attribute:
        title: Order Customer Settings
        header:
          no: No.
          name: Setting Category
          option: Option
      product:
        title: Order Product Details
        header:
          no: No.
          name: Product
          catalog: Category
          count: Quantity
          price: Single Price
          cost: Single Cost
          origin: Original Price
      ingredient:
        title: Order Ingredient Details
        header:
          no: No.
          name: Ingredient
          quantity: Quantity
          amount: Amount
      expandable:
        hint: See next table
  text:
    menu:
      header:
      - This menu has {catalogs} categories, {products} products.
      - catalogs: {type: int}
        products: {type: int}
      headerPrefix:
      - This menu has
      - This is used to check if this text is a menu
      catalog:
      - Category {index} is called {catalog} and {details}.
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        catalog:
        details:
      catalogDetails:
      - =0: it has no product
        =1: it has one product
        other: it has {count} products
      - count: {type: int, mode: plural}
      product:
      - Product {index} is called {name}, with price at ${price}, cost ${cost} and {details}
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        name:
        price:
        cost:
        details:
      productDetails:
      - =0: it has no ingredient.
        =1: |-
          it has one ingredient: {names}.
          Each product requires {details}.
        other: |-
          it has {count} ingredients: {names}.
          Each product requires {details}.
      - count: {type: int, mode: plural}
        names:
        details:
      ingredient:
      - '{amount} of {name} and {details}'
      - Strings are used so that regex can be inserted here during import to obtain information
      - amount:
        name:
        details:
      ingredientDetails:
      - =0: it is unable to adjust quantity
        =1: 'it also has one different quantity {quantities}'
        other: 'it also has {count} different quantities {quantities}'
      - count: {type: int, mode: plural}
        quantities:
      quantity:
      - quantity {amount} with additional price ${price} and cost ${cost}
      - Strings are used so that regex can be inserted here during import to obtain information
      - amount:
        price:
        cost:
    stock:
      header:
      - The inventory has {count} ingredients in total.
      - count: {type: int}
      headerPrefix:
      - The inventory has
      - This is used to check if this text is stock
      ingredient:
      - Ingredient at {index} is called {name}, with {amount} amount{details}.
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        name:
        amount:
        details:
      _ingredient:
        $prefix: ingredient
        maxAmount:
        - =0: ''
          other: ', with a maximum of {max} pieces'
        - String(max) are used so that regex can be inserted here during import to obtain information
        - exist: {type: int, mode: plural}
          max:
        restockPrice:
        - =0: ''
          other: ' and {quantity} units of it cost ${price} to replenish'
        - exist: {type: int, mode: plural}
          quantity:
          price:
    quantities:
      header:
      - '{count} quantities have been set.'
      - count: {type: int}
      headerSuffix:
      - quantities have been set.
      - This is used to check if this text is quantities
      quantity:
      - Quantity at {index} is called {name}, which defaults to multiplying ingredient quantity by {prop}.
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        name:
        prop:
    replenisher:
      header:
      - '{count} replenishment methods have been set.'
      - count: {type: int}
      headerSuffix:
      - replenishment methods have been set.
      - This is used to check if this text is replenishment quantity
      replenishment:
      - Replenishment method at {index} is called {name}, {details}.
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        name:
        details:
      replenishmentDetails:
      - =0: 'it will not adjust inventory'
        other: 'it will adjust the inventory of {count} ingredients'
      - count: {type: int, mode: plural}
    oa:  # order attribute
      header:
      - '{count} customer attributes have been set.'
      - count: {type: int}
      headerSuffix:
      - customer attributes have been set.
      - This is used to check if this text is customer settings
      oa:
      - Attribute at {index} is called {name}, belongs to {mode} type, {details}.
      - Strings are used so that regex can be inserted here during import to obtain information
      - index:
        name:
        mode:
        details:
      oaDetails:
      - =0: it has no options
        =1: it has one option
        other: 'it has {count} options'
      - count: {type: int, mode: plural}
      defaultOption: default
      modeValue:
      - option value is {value}
      - value: {type: num, format: decimalPattern}
    order:
      price:
      - =0: Total price ${price}.
        other: Total price ${price}, {productsPrice} of them are product price.
      - hasProducts: {type: int, mode: plural}
        price:
        productsPrice:
      money:
      - Paid ${paid}, cost ${cost}.
      - paid:
        cost:
      productCount:
      - =0: There is no product.
        =1: |-
          There is 1 product details are:
          {products}.
        other: |-
          There are {count} products ({setCount} types of set) including:
          {products}.
      - count: {type: int, mode: plural}
        setCount: {type: int}
        products:
      product:
      - =0: '{count} of {product} ({catalog}), total price is ${price}, no ingredient settings'
        other: '{count} of {product} ({catalog}), total price is ${price}, ingredients are {ingredients}'
      - hasIngredient: {type: int, mode: plural}
        product:
        catalog:
        count: {type: int}
        price:
        ingredients:
      ingredient:
      - =0: "{ingredient} ({quantity})"
        other: "{ingredient} ({quantity}), used {amount}"
      - Details of ingredients and quantities for each product in the order list
      - amount: {type: num, mode: plural, format: decimalPattern}
        ingredient:
        quantity:
      noQuantity: default quantity
      orderAttribute:
      - Customer's {options}.
      - options:
      orderAttributeItem:
      - '{name} is {option}'
      - name:
        option:
googleSheet:
  dialog:
    title: Provide Google Sheets
    create: Create New Spreadsheet
    selectExist: Select Existing Spreadsheet
    confirm: Confirm
    id:
      label: Spreadsheet ID or URL
      helper: |-
        The ID is the combination of letters, numbers, underscores, and hyphens in the URL.
        For example, the ID of "https://docs.google.com/spreadsheets/d/1a2b3c4d5e6f7g8h9i0j" is "1a2b3c4d5e6f7g8h9i0j".
        Using existing spreadsheets may overwrite the data in the selected sheet.
  progress:
    create: Creating new spreadsheet
    fulfill: Filling spreadsheet with sheets
  error:
    create:
      title: Unable to Create Spreadsheet
      helper: |-
        Don't worry, it's usually easy to solve!
        Possible reasons include:
        • Unstable network conditions;
        • POS system not authorized to edit spreadsheets.
    fulfill:
      title: Unable to Create Sheet in Spreadsheet
      helper: |-
        Don't worry, it's usually easy to solve!
        Possible reasons include:
        • Unstable network conditions;
        • POS system not authorized to edit spreadsheets;
        • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
        • The spreadsheet has been deleted.
    id:
      notFound: Spreadsheet not found
      notFoundHelper: |-
        Don't worry, it's usually easy to solve!
        Possible reasons include:
        • Unstable network conditions;
        • POS system not authorized to read sheets;
        • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
        • The spreadsheet has been deleted.
      empty: ID cannot be empty
      invalid: |-
        Invalid ID. It must include:
        • /spreadsheets/d/<ID>/
        • Or provide the ID directly (combination of letters, numbers, underscores, and hyphens).
    network: |-
      Network error, unable to connect to Google Sheets.
