$prefix: transit
title: Data Transfer
description: Importing and Exporting Store Information and Orders
method:
  title: Please Select Transfer Method
  name:
  - googleSheet: Google Sheets
    plainText: Plain Text
  - name:
catalog:
  name:
  - order: Order Records
    model: Store Information
  - name:
  helper:
  - order: Export order info for detailed statistical analysis.
    model: Store info is usually used to sync menu, inventory, etc., to third-party locations or to import to another device.
  - name:
model:
  name:
  - menu: Menu
    stock: Inventory
    quantities: Quantities
    replenisher: Replenisher
    orderAttr: Customer Settings
    order: Order
    orderDetailsAttr: Order Customer Settings
    orderDetailsProduct: Order Product Details
    orderDetailsIngredient: Order Ingredient Details
  - name:
order:
  meta:
    range:
    - "Orders for {range}"
    - range: {example: '01/01 - 01/31'}
    rangeDays:
    - "Data for {days} Days"
    - days: {type: int}
  capacity:
    title:
    - 'Estimated Capacity: {size}'
    - size:
    content: High capacity may cause execution errors. It's recommended to perform in batches and not export too many records at once.
    ok: Capacity Okay
    warn: Capacity Warning
    danger: Capacity Danger
  item:
    title:
    - "{date}"
    - date: {type: DateTime, format: "MMM d HH:mm:ss", isCustomDateFormat: true}
    meta:
      productCount:
      - 'Product Count: {count}'
      - count: {type: int}
      price:
      - 'Total Price: {price}'
      - price:
    dialog:
      title: Order Details
export:
  preview:
    btn: Preview
    title: Preview Output Result
  btn: Export
import:
  preview:
    btn: Preview
    title: Preview Import Result
    header: 'Note: Importing will remove the data not listed below. Please confirm before executing!'
    ingredient:
      meta:
        amount:
        - 'Amount: {amount}'
        - amount: {type: num, format: decimalPattern}
        maxAmount:
        - =0: Not Set
          other: 'Max Value: {value}'
        - exist: {type: int, mode: plural}
          value: {type: num, format: decimalPattern}
      header: After import, old ingredients won't be removed to avoid affecting the "Menu" status.
    quantity:
      header: After import, old quantities won't be removed to avoid affecting the "Menu" status.
  btn: Import
  error:
    columnCount:
    - Insufficient data, {columns} columns required
    - columns: {type: int}
    duplicate: This line will be ignored as the same item appeared earlier
  columnStatus:
  - normal: (Normal)
    staged: (New)
    stagedIng: (New Ingredient)
    stagedQua: (New Quantity)
    updated: (Updated)
  - Additional status of the data displayed
  - name:
GS:
  description: Google Sheets is a powerful mini-database. After exporting, it can be customized for various analyses!
  sheet:
    name:
      label:
      - 'Sheet Title of {name}'
      - Label of title
      - name:
      update: Modify Title
  spreadsheet:
    label: Spreadsheet
    action:
      select: Select Spreadsheet
      clear: Clear Selection
    export:
      empty:
        label: Create & Export
        hint:
        - Create a new spreadsheet "{name}" and export data to it.
        - name:
      exist:
        label:
        - Specify & Export
        - Inform the user that data will be exported to the specified spreadsheet.
        hint:
        - Export to spreadsheet "{name}"
        - name:
    import:
      all:
        btn: Import All
        hint: There will be no preview screen, directly overwrite all data.
        confirm:
          title: Import All Data?
          content: |-
            All data from the selected sheets will be downloaded and completely overwrite local data.
            This action cannot be undone.
      exist:
        label: Load Sheets Name
        hint: Get all sheet names from the spreadsheet and ready to import.
      empty:
        label: Select Spreadsheet
        hint: Once you choose the spreadsheet to import, you can start importing data.
    confirm:
    - This action will {hint}
    - hint:
    selectionHint:
    - _: Enter the spreadsheet URL or spreadsheet ID
      other: The current spreadsheet is "{name}"
    - name:
    model:
      defaultName: POS System Data
      export:
        divider: Select types to export
      import:
        divider: Select sheet to import
    order:
      defaultName: POS System Orders
    snackbarAction: Open
  progressStatus:
    addSpreadsheet: Adding Spreadsheet...
    addSheets: Adding Sheets...
    verifyUser: Verifying Identity
    fetchLocalOrders: Retrieving Local Data...
    overwriteOrders: Overwriting Order Data...
    appendOrders:
    - Appended to {name}
    - name:
  model:
    status:
    - menu: Updating Menu...
      stock: Updating Inventory...
      quantities: Updating Quantities...
      replenisher: Updating Replenisher...
      orderAttr: Exporting Customer Settings...
      order: Exporting Orders...
      orderDetailsAttr: Exporting Order Customer Settings...
      orderDetailsProduct: Exporting Order Product Details...
      orderDetailsIngredient: Exporting Order Ingredient Details...
    - model:
    product:
      ingredient:
        title: Ingredient Information
        note: |-
          Information of all product ingredients, format as follows:
          - Ingredient 1, Default usage amount
            + Quantity a, Additional usage amount, Additional price, Additional cost
            + Quantity b, Additional usage amount, Additional price, Additional cost
          - Ingredient 2, Default usage amount
    replenishment:
      title: Replenishment Amount
      note: |-
        The amount of specific ingredients during each replenishment, format as follows:
        - Ingredient 1, Replenishment amount
        - Ingredient 2, Replenishment amount
    attributeOption:
      title: Customer Setting Options
      header:
        ts: Timestamp
        mode: Type
        options: Options
      note: |-
        "Options" will have different meanings depending on the type of customer settings, format as follows:
        - Option 1, Is default, Option value
        - Option 2, Is default, Option value
  order:
    setting:
      title: Order Export Settings
      overwrite:
        label: Overwrite Sheet
        hint: Overwriting the sheet will start exporting from the first row.
      titlePrefix:
        label: Add Date Prefix
        hint: Add a date prefix to the sheet name, for example, "0101 - 0131 Order Data".
      recommendCombination: When not overwriting and using append instead, it's recommended not to add a date prefix to the form name.
      name:
        label: Sheet Name
        helper: |-
          Splitting the sheet allows for more flexible data analysis,
          for example, you can query the total usage of a certain ingredient in order details.
    meta:
      overwrite:
      - 'true': Will overwrite
        'false': Won't overwrite
      - value:
      titlePrefix:
      - 'true': Has date prefix
        'false': No date prefix
      - value:
      memoryWarning: |-
        The capacity here represents the amount consumed by network transmission, the actual cloud memory occupied may be only one percent of this value.
        For detailed capacity limit explanations, please refer to [this document](https://developers.google.com/sheets/api/limits#quota).
    header:
      ts: Timestamp
      time: Time
      price: Price
      productPrice: Product Price
      paid: Paid
      cost: Cost
      profit: Profit
      itemCount:
      - Item Count
      - how many items in the order
      typeCount:
      - Type Count
      - how many types of products in the order
    attribute:
      title: Order Customer Settings
      header:
        ts: Timestamp
        name: Setting Category
        option: Option
    product:
      title: Order Product Details
      header:
        ts: Timestamp
        name: Product
        catalog: Category
        count: Quantity
        price: Single Price
        cost: Single Cost
        origin: Original Price
    ingredient:
      title: Order Ingredient Details
      header:
        ts: Timestamp
        name: Ingredient
        quantity: Quantity
        amount: Amount
    expandable:
      hint: See next table
  error:
    createSpreadsheet: Unable to Create Spreadsheet
    createSpreadsheetHelper: |-
      Don't worry, it's usually easy to solve!
      Possible reasons include:
      • Unstable network conditions;
      • POS system not authorized to edit spreadsheets.
    spreadsheetEmpty: Please Select a Spreadsheet First
    spreadsheetId:
      empty: Cannot be Empty
      invalid: |-
        Invalid text. It must include:
        • /spreadsheets/d/<ID>/
        • Or provide the ID directly (combination of letters, numbers, underscores, and hyphens).
    createSheet: Unable to Create Sheet in Spreadsheet
    createSheetHelper: |-
      Don't worry, it's usually easy to solve!
      Possible reasons include:
      • Unstable network conditions;
      • POS system not authorized to create sheets;
      • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
      • The spreadsheet has been deleted.
    sheetRepeat: Sheet name duplicate
    sheetEmpty: Please select at least one sheet to export
    nonExistName: Spreadsheet not found, has it been deleted?
    import:
      emptySpreadsheet: Must select a spreadsheet to import
      emptySheet: Must select a specific sheet to import
      emptyData: No values found in sheet
      notFoundSpreadsheet: Spreadsheet not found
      notFoundSheets:
      - No data found for sheet "{name}"
      - name:
      notFoundHelper: |-
        Don't worry, it's usually easy to solve!
        Possible reasons include:
        • Unstable network conditions;
        • POS system not authorized to read sheets;
        • Misspelled spreadsheet ID, try copying the entire URL and pasting it;
        • The spreadsheet has been deleted.
PT:
  description: Quick check, quick share.
  copy:
    btn: Copy Text
    success: Copied successfully
    warning: Copying too much text may cause system crash
  import:
    hint: Paste copied text here
    helper: After pasting the text, it will analyze and determine the type of information to import.
    error:
      notFound: This text cannot match any corresponding service. Please refer to the exported text content.
  format:
    order:
      price:
      - =0: Total price ${price}.
        other: Total price ${price}, {productsPrice} of them are product price.
      - hasProducts: {type: int, mode: plural}
        price:
        productsPrice:
      money:
      - Paid ${paid}, cost ${cost}.
      - paid:
        cost:
      productCount:
      - =0: There is no product.
        =1: |-
          There is 1 product details are:
          {products}.
        other: |-
          There are {count} products ({setCount} types of set) including:
          {products}.
      - count: {type: int, mode: plural}
        setCount: {type: int}
        products:
      product:
      - =0: '{count} of {product} ({catalog}), total price is ${price}, no ingredient settings'
        other: '{count} of {product} ({catalog}), total price is ${price}, ingredients are {ingredients}'
      - hasIngredient: {type: int, mode: plural}
        product:
        catalog:
        count: {type: int}
        price:
        ingredients:
      ingredient:
      - =0: "{ingredient} ({quantity})"
        other: "{ingredient} ({quantity}), used {amount}"
      - Details of ingredients and quantities for each product in the order list
      - amount: {type: num, mode: plural, format: decimalPattern}
        ingredient:
        quantity:
      noQuantity: default quantity
      orderAttribute:
      - Customer's {options}.
      - options:
      orderAttributeItem:
      - '{name} is {option}'
      - name:
        option:
    model:
      menu:
        meta:
          catalog:
          - '{count} categories'
          - count: {type: int}
          product:
          - '{count} products'
          - count: {type: int}
        header:
        - This menu has {catalogs} categories, {products} products.
        - catalogs: {type: int}
          products: {type: int}
        headerPrefix:
        - This menu has
        - This is used to check if this text is a menu
        catalog:
        - Category {index} is called {catalog} and {details}.
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          catalog:
          details:
        catalogDetails:
        - =0: it has no product
          =1: it has one product
          other: it has {count} products
        - count: {type: int, mode: plural}
        product:
        - Product {index} is called {name}, with price at ${price}, cost ${cost} and {details}
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          name:
          price:
          cost:
          details:
        productDetails:
        - =0: it has no ingredient.
          =1: |-
            it has one ingredient: {names}.
            Each product requires {details}.
          other: |-
            it has {count} ingredients: {names}.
            Each product requires {details}.
        - count: {type: int, mode: plural}
          names:
          details:
        ingredient:
        - '{amount} of {name} and {details}'
        - Strings are used so that regex can be inserted here during import to obtain information
        - amount:
          name:
          details:
        ingredientDetails:
        - =0: it is unable to adjust quantity
          =1: 'it also has one different quantity {quantities}'
          other: 'it also has {count} different quantities {quantities}'
        - count: {type: int, mode: plural}
          quantities:
        quantity:
        - quantity {amount} with additional price ${price} and cost ${cost}
        - Strings are used so that regex can be inserted here during import to obtain information
        - amount:
          price:
          cost:
      stock:
        meta:
          ingredient:
          - '{count} ingredients'
          - count: {type: int}
        header:
        - The inventory has {count} ingredients in total.
        - count: {type: int}
        headerPrefix:
        - The inventory has
        - This is used to check if this text is stock
        ingredient:
        - Ingredient at {index} is called {name}, with {amount} amount{details}.
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          name:
          amount:
          details:
        _ingredient:
          $prefix: ingredient
          maxAmount:
          - =0: ''
            other: ', with a maximum of {max} pieces'
          - String(max) are used so that regex can be inserted here during import to obtain information
          - exist: {type: int, mode: plural}
            max:
          restockPrice:
          - =0: ''
            other: ' and {quantity} units of it cost ${price} to replenish'
          - exist: {type: int, mode: plural}
            quantity:
            price:
      quantities:
        meta:
          quantity:
          - '{count} quantities'
          - count: {type: int}
        header:
        - '{count} quantities have been set.'
        - count: {type: int}
        headerSuffix:
        - quantities have been set.
        - This is used to check if this text is quantities
        quantity:
        - Quantity at {index} is called {name}, which defaults to multiplying ingredient quantity by {prop}.
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          name:
          prop:
      replenisher:
        meta:
          replenishment:
          - '{count} replenishment methods'
          - count: {type: int}
        header:
        - '{count} replenishment methods have been set.'
        - count: {type: int}
        headerSuffix:
        - replenishment methods have been set.
        - This is used to check if this text is replenishment quantity
        replenishment:
        - Replenishment method at {index} is called {name}, {details}.
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          name:
          details:
        replenishmentDetails:
        - =0: 'it will not adjust inventory'
          other: 'it will adjust the inventory of {count} ingredients'
        - count: {type: int, mode: plural}
      oa: # order attribute
        meta:
          oa:
          - '{count} customer attributes'
          - count: {type: int}
        header:
        - '{count} customer attributes have been set.'
        - count: {type: int}
        headerSuffix:
        - customer attributes have been set.
        - This is used to check if this text is customer settings
        oa:
        - Attribute at {index} is called {name}, belongs to {mode} type, {details}.
        - Strings are used so that regex can be inserted here during import to obtain information
        - index:
          name:
          mode:
          details:
        oaDetails:
        - =0: it has no options
          =1: it has one option
          other: 'it has {count} options'
        - count: {type: int, mode: plural}
        defaultOption: default
        modeValue:
        - option value is {value}
        - value: {type: num, format: decimalPattern}
