$prefix: "transit"
title: 資料轉移
description: 匯入、匯出店家資訊和訂單
tutorial:
  title: 同步多台裝置
  content: |-
    這裡是用來匯入匯出菜單、庫存、訂單記錄等資訊的地方。

    我們提供了 Google 試算表和純文字兩種方式，讓您可以方便地在不同裝置間同步資料。
method:
  title: 請選擇欲轉移的方式
  name:
  - googleSheet: Google 試算表
    plainText: 純文字
catalog: # 資料的分類
  name:
  - order: 訂單記錄
    model: 店家資訊
  helper:
  - order: 訂單資訊可以讓你匯出到第三方位置後做更細緻的統計分析。
    model: 商家資訊通常是用來把菜單、庫存等資訊同步到第三方位置或用來匯入到另一台手機。
model:
  name:
  - menu: 菜單
    stock: 庫存
    quantities: 份量
    replenisher: 補貨
    orderAttr: 顧客設定
    order: 訂單
    orderDetailsAttr: 訂單顧客設定
    orderDetailsProduct: 訂單產品細項
    orderDetailsIngredient: 訂單成分細項
order:
  meta:
    range: "{range}的訂單"
    rangeDays: "{days} 天的資料"
  capacity:
    title: 預估容量為：{size}
    content: 過高的容量可能會讓執行錯誤，建議分次執行，不要一次匯出太多筆。
    ok: 容量剛好
    warn: 容量警告
    danger: 容量危險
  item:
    title: "{date}"
    meta:
      productCount: 餐點數：{count}
      price: 總價：{price}
    dialog:
      title: 訂單細節
export:
  preview:
    btn: 預覽
    title: 預覽輸出結果
  btn: 匯入
import:
  preview:
    btn: 預覽
    title: 預覽匯入結果
    header: 注意：匯入後將會把下面沒列到的資料移除，請確認是否執行！
    ingredient:
      meta:
        amount: 庫存：{amount}
        maxAmount:
        - =0: 未設定
          other: 最大值：{value}
      header: 匯入後，為了避免影響「菜單」的狀況，並不會把舊的成分移除。
    quantity:
      header: 匯入後，為了避免影響「菜單」的狀況，並不會把舊的份量移除。
  btn: 匯出
  error:
    columnCount: 資料量不足，需要 {columns} 個欄位
    duplicate: 將忽略本行，相同的項目已於前面出現
  columnStatus:
  - normal: （一般）
    staged: （新增）
    stagedIng: （新的成分）
    stagedQua: （新的份量）
    updated: （異動）
GS:
  description: Google 試算表是一個強大的小型資料庫，匯出之後可以做很多客制化的分析！
  sheet:
    name:
      label: '{name}的表單標題'
      update: 修改標題
  spreadsheet:
    label: 試算表
    action:
      select: 選擇試算表
      clear: 清除所選
    export:
      empty:
        label: 建立匯出
        hint: 建立新的試算表「{name}」，並把資料匯出至此
      exist:
        label: 指定匯出
        hint: 匯出至試算表「{name}」
    import:
      all:
        btn: 匯入全部
        hint: 不會有任何預覽畫面，直接覆寫全部的資料。
        confirm:
          title: 匯入全部資料？
          content: |-
            將會把所選表單的資料都下載，並完全覆蓋本地資料。
            此動作無法復原。
      exist:
        label: 確認表單名稱
        hint: 從試算表中取得所有表單的名稱，並進行匯入
      empty:
        label: 選擇試算表
        hint: 選擇要匯入的試算表後，就能開始匯入資料
    confirm: 此動作將會{hint}
    selectionHint:
    - _: 輸入試算表網址或試算表 ID
      other: 原試算表為「{name}」
    model:
      defaultName: POS System 資料
      export:
        divider: 選擇欲匯出的種類
      import:
        divider: 選擇欲匯入表單
    order:
      defaultName: 訂單資料
    snackbarAction: 開啟表單
  progressStatus:
    addSpreadsheet: 新增試算表中..
    addSheets: 新增表單中..
    verifyUser: 驗證身份中
    fetchLocalOrders: 取得本地資料..
    overwriteOrders: 覆寫訂單資料..
    appendOrders: 附加進 {name}
  model:
    status:
    - menu: 更新菜單中..
      stock: 更新庫存中..
      quantities: 更新份量中..
      replenisher: 更新補貨中..
      orderAttr: 更新顧客設定中..
      order: 匯出訂單中..
      orderDetailsAttr: 匯出顧客設定中..
      orderDetailsProduct: 匯出產品細項中..
      orderDetailsIngredient: 匯出成分細項中..
    product:
      ingredient:
        title: 成分資訊
        note: |-
          產品全部成分的資訊，格式如下：
          - 成分1,預設使用量
            + 份量a,額外使用量,額外價格,額外成本
            + 份量b,額外使用量,額外價格,額外成本
          - 成分2,預設使用量
    replenishment:
      title: 補貨量
      note: |-
        每次補貨時特定成分的量，格式如下：
        - 成分1,補貨量
        - 成分2,補貨量
    attributeOption:
      title: 顧客設定選項
      header:
        ts: 時間戳記
        mode: 類型
        options: 選項
      note: |-
        「選項值」會根據顧客設定種類不同而有不同意義，格式如下：
        - 選項1,是否為預設,選項值
        - 選項2,是否為預設,選項值
  order:
    setting:
      title: 訂單匯出設定
      overwrite:
        label: 是否覆寫表單
        hint: 覆寫表單之後，將會從第一行開始匯出
      titlePrefix:
        label: 加上日期前綴
        hint: 表單名稱前面加上日期前綴，例如：「0101 - 0131 訂單資料」
      recommendCombination: 不覆寫而改用附加的時候，建議表單名稱「不要」加上日期前綴
      name:
        label: 表單名稱
        helper: |-
          拆分表單可以讓你更彈性的去分析資料，
          例如可以到訂單成份細項查詢：今天某個成分總共用了多少。
    meta:
      overwrite:
      - 'true': 會覆寫
        'false': 不會覆寫
      titlePrefix:
      - 'true': 有日期前綴
        'false': 沒有日期前綴
      memoryWarning: |-
        這裡的容量代表網路傳輸所消耗的量，實際佔用的雲端記憶體可能是此值的百分之一而已。
        詳細容量限制說明可以參考[本文件](https://developers.google.com/sheets/api/limits#quota)。
    header:
      ts: 時間戳記
      time: 時間
      price: 總價
      productPrice: 產品總價
      paid: 付額
      cost: 成本
      profit: 收入
      itemCount: 產品份數
      typeCount: 產品類數
    attribute:
      title: 訂單顧客設定
      header:
        ts: 時間戳記
        name: 設定類別
        option: 選項
    product:
      title: 訂單產品細項
      header:
        ts: 時間戳記
        name: 產品
        catalog: 種類
        count: 數量
        price: 單一售價
        cost: 單一成本
        origin: 單一原價
    ingredient:
      title: 訂單成分細項
      header:
        ts: 時間戳記
        name: 成分
        quantity: 份量
        amount: 數量
    expandable: # 資料放在不只一個資料表，透過多個資料表來分類
      hint: 詳見下欄
  error:
    createSpreadsheet: 無法建立試算表
    createSpreadsheetHelper: |-
      別擔心，通常都可以簡單解決！
      可能的原因有：
      • 網路狀況不穩；
      • 尚未授權 POS 系統進行表單的編輯。
    spreadsheetEmpty: 請先選擇試算表
    spreadsheetId:
      empty: 不能為空
      invalid: |-
        不合法的文字，必須包含：
        • /spreadsheets/d/<ID>/
        • 或者直接給 ID（英文+數字+底線+減號的組合）
    createSheet: 無法在試算表中建立表單
    createSheetHelper: |-
      別擔心，通常都可以簡單解決！
      可能的原因有：
      • 網路狀況不穩；
      • 尚未授權 POS 系統進行表單的建立；
      • 試算表 ID 打錯了，請嘗試複製整個網址後貼上；
      • 該試算表被刪除了。
    sheetRepeat: 表單名稱重複
    sheetEmpty: 請選擇至少一個表單來匯出
    nonExistName: 找不到試算表，是否已被刪除？
    import:
      emptySpreadsheet: 必須選擇試算表來匯入
      emptySheet: 必須選擇指定的表單來匯入
      emptyData: 在表單中沒找到任何值
      notFoundSpreadsheet: 找不到試算表
      notFoundSheets: 找不到表單「{name}」的資料
      notFoundHelper: |-
        別擔心，通常都可以簡單解決！
        可能的原因有：
        • 網路狀況不穩；
        • 尚未授權 POS 系統進行表單的讀取；
        • 試算表 ID 打錯了，請嘗試複製整個網址後貼上；
        • 該試算表被刪除了。
PT:
  description: 快速檢查、快速分享。
  copy:
    btn: 複製文字
    success: 複製成功
    warning: 複製過大的文字可能會造成系統的崩潰
  import:
    hint: 請貼上複製而來的文字
    helper: 貼上文字後，會分析文字並決定匯入的是什麼種類的資訊。
    error:
      notFound: 這段文字無法匹配相應的服務，請參考匯出時的文字內容。
  format:
    order:
      price:
      - =0: 共 {price} 元。
        other: 共 {price} 元，其中的 {productsPrice} 元是產品價錢。
      money: 付額 {paid} 元、成分 {cost} 元。
      productCount:
      - =0: 沒有任何餐點。
        =1: |-
          餐點有 {count} 份，內容為：
          {products}。
        other: |-
          餐點有 {count} 份（{setCount} 種組合）包括：
          {products}。
      product:
      - =0: '{product}（{catalog}）{count} 份共 {price} 元，沒有設定成分'
        other: '{product}（{catalog}）{count} 份共 {price} 元，成份包括 {ingredients}'
      ingredient:
      - =0: "{ingredient}（{quantity}）"
        other: "{ingredient}（{quantity}），使用 {amount} 個"
      noQuantity: 預設份量
      orderAttribute: 顧客的 {options}
      orderAttributeItem: '{name} 為 {option}'
    model:
      menu:
        meta:
          catalog: '{count} 個產品種類'
          product: '{count} 個產品'
        header: 本菜單共有 {catalogs} 個產品種類、{products} 個產品。
        headerPrefix: 本菜單
        catalog: 第{index}個種類叫做 {catalog}，{details}。
        catalogDetails:
        - =0: 沒有設定產品
          other: 共有 {count} 個產品
        product: 第{index}個產品叫做 {name}，其售價為 {price} 元，成本為 {cost} 元，{details}
        productDetails:
        - =0: 它沒有設定任何成份。
          other: |-
            它的成份有 {count} 種：{names}。
            每份產品預設需要使用 {details}。
        ingredient: '{amount} 個 {name}，{details}'
        ingredientDetails:
        - =0: 無法做份量調整
          other: 它還有 {count} 個不同份量 {quantities}
        quantity: '每份產品改成使用 {amount} 個並調整產品售價 {price} 元和成本 {cost} 元'
      stock:
        meta:
          ingredient: '{count} 種成分'
        header: 本庫存共有 {count} 種成分。
        headerPrefix: 本庫存
        ingredient: 第{index}個成分叫做 {name}，庫存現有 {amount} 個{details}。
        ingredientDetails:
        - =0: ''
          other: ，最大量有 {max} 個
      quantities:
        meta:
          quantity: '{count} 種份量'
        header: 共設定 {count} 種份量。
        headerSuffix: 種份量。
        quantity: 第{index}種份量叫做 {name}，預設會讓成分的份量乘以 {prop} 倍。
      replenisher:
        meta:
          replenishment: '{count} 種補貨方式'
        header: 共設定 {count} 種補貨方式。
        headerSuffix: 種補貨方式。
        replenishment: 第{index}個成分叫做 {name}，{details}。
        replenishmentDetails:
        - =0: '它並不會調整庫存'
          other: 它會調整{count}種成份的庫存
      oa: # order attribute
        meta:
          oa: '{count} 種顧客屬性'
        header: 共設定 {count} 種顧客屬性。
        headerSuffix: 種顧客屬性。
        oa: 第{index}種屬性叫做 {name}，屬於 {mode} 類型，{details}。
        oaDetails:
        - =0: 它並沒有設定選項
          other: 它有 {count} 個選項
        defaultOption: 預設
        modeValue: 選項的值為 {value}

