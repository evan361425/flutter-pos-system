name: Deploy to Play Store

on:
  workflow_dispatch:
    # Enable manual run
    inputs:
      lane:
        description: "Fastlane lane to use (internal, beta, promote_to_production, production)"
        required: true
        default: "internal"
      number:
        description: "Build number default 1"
        required: false
        default: "1"
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  var:
    runs-on: ubuntu-18.04
    outputs:
      lane: ${{ steps.lane.outputs.result }}
      number: ${{ steps.number.outputs.result }}
      flavor: ${{ steps.flavor.outputs.flavor }}
    steps:
      - name: Extract lane
        id: lane
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const ref = context.payload.ref || '';

            return ref.startsWith('refs/tags/')
              ? ref.includes('-rc') ? 'internal' : 'beta'
              : '${{ github.event.inputs.lane }}';

      - name: Extract build number
        id: number
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const ref = context.payload.ref || '';

            return ref.startsWith('refs/tags/') && ref.includes('-rc')
              ? ref.substr(ref.indexOf('-rc') + 3)
              : '${{ github.event.inputs.number }}';

      - name: Extract Flavor
        id: flavor
        run: |
          if [ "${{ steps.lane.outputs.result }}" == "internal" ]; then
            echo "::set-output name=flavor::dev"
          else
            echo "::set-output name=flavor::prod"
          fi
  fastlane-deploy:
    runs-on: ubuntu-18.04
    needs: var
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true
          working-directory: android

      # Get flutter dependencies.
      - name: Build dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build

      - name: Configure Firebase
        run: |
          mkdir -p ${{ needs.var.outputs.lane }}
          echo "$GOOGLE_SERVICES" > ${{ needs.var.outputs.lane }}/google-services.json
        env:
          GOOGLE_SERVICES: ${{ needs.var.outputs.lane == 'dev' && secrets.GOOGLE_SERVICES_DEV || secrets.GOOGLE_SERVICES_PROD }}
        working-directory: android/app/src

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      # Build and deploy with Fastlane (by default, to internal track) ðŸš€.
      # Naturally, promote_to_production only deploys.
      - name: Fastlane building
        run: bundle exec fastlane ${{ needs.var.outputs.lane }}
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
          BUILD_NUMBER: ${{needs.var.outputs.number}}
        working-directory: android
