name: Deploy to Play Store

on:
  workflow_dispatch:
    # Enable manual run
    inputs:
      lane:
        description: "Fastlane lane to use (internal, beta, promote_to_production, production)"
        required: true
        default: "internal"
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # No need check tag, since we will trigger this by manual
  fastlane-deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: Extract lane
        id: lane
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const input = ${{ github.event.inputs.lane }};
            const ref = context.payload.ref || '';
            const version = ref.replace(/\/refs\/tags\/v/, '');

            return version ? version.includes('-rc') ? 'internal' : 'beta' : input;

      # Set up Flutter.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Get flutter dependencies.
      - name: Build dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true
          working-directory: android

      - name: Export Flavor
        run: |
          if [ "${{ steps.lane.outputs.result }}" == "internal" ]; then
            echo "FLAVOR=dev" >> $GITHUB_ENV
          else
            echo "FLAVOR=prod" >> $GITHUB_ENV
          fi

      - name: Configure Firebase
        run: |
          mkdir -p ${{ env.FLAVOR }}
          echo "$GOOGLE_SERVICES" > ${{ env.FLAVOR }}/google-services.json
        env:
          GOOGLE_SERVICES: ${{ env.FLAVOR == 'dev' && secrets.GOOGLE_SERVICES_DEV || secrets.GOOGLE_SERVICES_PROD }}
        working-directory: android/app/src

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      # Build and deploy with Fastlane (by default, to internal track) ðŸš€.
      # Naturally, promote_to_production only deploys.
      - run: bundle exec fastlane ${{ steps.lane.outputs.result }}
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        working-directory: android
