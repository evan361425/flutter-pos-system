// Mocks generated by Mockito 5.0.16 from annotations
// in possystem/test/mocks/mock_image_dumper.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:io' as _i2;

import 'package:image/image.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:possystem/services/image_dumper.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFile_0 extends _i1.Fake implements _i2.File {}

/// A class which mocks [ImageDumper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageDumper extends _i1.Mock implements _i3.ImageDumper {
  MockImageDumper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.File?> pick() =>
      (super.noSuchMethod(Invocation.method(#pick, []),
          returnValue: Future<_i2.File?>.value()) as _i4.Future<_i2.File?>);
  @override
  _i4.Future<_i5.Image?> resize(_i2.File? image, {int? width, int? height}) =>
      (super.noSuchMethod(
          Invocation.method(#resize, [image], {#width: width, #height: height}),
          returnValue: Future<_i5.Image?>.value()) as _i4.Future<_i5.Image?>);
  @override
  _i4.Future<_i2.File> toPNG(_i5.Image? image, String? path) =>
      (super.noSuchMethod(Invocation.method(#toPNG, [image, path]),
              returnValue: Future<_i2.File>.value(_FakeFile_0()))
          as _i4.Future<_i2.File>);
  @override
  String toString() => super.toString();
}
