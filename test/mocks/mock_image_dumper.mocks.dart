// Mocks generated by Mockito 5.0.16 from annotations
// in possystem/test/mocks/mock_image_dumper.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:io' as _i2;
import 'dart:typed_data' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:possystem/models/image_file.dart' as _i3;
import 'package:possystem/services/image_dumper.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFile_0 extends _i1.Fake implements _i2.File {}

class _FakeImageFile_1 extends _i1.Fake implements _i3.ImageFile {}

/// A class which mocks [ImageDumper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageDumper extends _i1.Mock implements _i4.ImageDumper {
  MockImageDumper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ImageFile?> pick() =>
      (super.noSuchMethod(Invocation.method(#pick, []),
              returnValue: Future<_i3.ImageFile?>.value())
          as _i5.Future<_i3.ImageFile?>);
  @override
  _i5.Future<_i3.ImageFile?> resize(_i3.ImageFile? image, String? destination,
          {int? width, int? height}) =>
      (super.noSuchMethod(
          Invocation.method(
              #resize, [image, destination], {#width: width, #height: height}),
          returnValue:
              Future<_i3.ImageFile?>.value()) as _i5.Future<_i3.ImageFile?>);
  @override
  _i5.Future<String> getPath(String? folder) =>
      (super.noSuchMethod(Invocation.method(#getPath, [folder]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  _i5.Future<void> deletePath(String? path) =>
      (super.noSuchMethod(Invocation.method(#deletePath, [path]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ImageFile].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageFile extends _i1.Mock implements _i3.ImageFile {
  MockImageFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.File get file =>
      (super.noSuchMethod(Invocation.getter(#file), returnValue: _FakeFile_0())
          as _i2.File);
  @override
  _i5.Future<_i6.Uint8List> readAsBytes() =>
      (super.noSuchMethod(Invocation.method(#readAsBytes, []),
              returnValue: Future<_i6.Uint8List>.value(_i6.Uint8List(0)))
          as _i5.Future<_i6.Uint8List>);
  @override
  _i5.Future<_i3.ImageFile> copy(String? newPath) =>
      (super.noSuchMethod(Invocation.method(#copy, [newPath]),
              returnValue: Future<_i3.ImageFile>.value(_FakeImageFile_1()))
          as _i5.Future<_i3.ImageFile>);
  @override
  String toString() => super.toString();
}
